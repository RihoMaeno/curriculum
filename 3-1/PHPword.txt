PHP基本用語

	Ajax…一部の情報のみサーバーにリクエストを行い、レスポンスを反映させる仕組み。サーバーからレスポンスが返ってこなくてもその他の部分での作業を継続することが可能。

	API…Application Programing Interface。アプリケーション構築のために使われるツール。

	デプロイ…作成したプログラムの場所を設定して利用可能な状態にすること。

	バッチ処理…実行順序を定義したうえで、データを処理する際の処理単位として

	デバック…バグの原因を探して取り除く作業

	外部設計…全体像や概要を作る工程。基本設計のこと。要件定義と詳細設計の中継ぎを行う。

	内部設計…実際のプログラムを作れるまで細かく落とし込む工程。詳細設計のこと。基本設計とプログラミングの中継ぎ。

	要件定義…クライアントの要望をまとめる工程。

	ログ…コンピュータの記録。アクセスログ、エラーログ等、ログ管理システムで確認可能。

	クラウドサーバー…一台のサーバーに複数のサーバーを複数サイトで共有可能。ホテル。

	レンタルサーバー…一台のサーバーのCPUやメモリのみ複数ユーザーで共有可能。シェアハウス。

	LAMP…Linux+Apache+MySQL+PHPで構成される環境。

	AWS…Amazon Web Services。Amazonのデータベースやサーバーを貸出できるサービス。

	ロジック…プログラムの処理の内容、手順、方法

	ウォーターフール開発…要件定義、設計、作成、テストという過程を後戻りせず一つずつ順に進めていくこと。

	アジャイル開発…作成、テストを繰り返し、フィードバックされながら作ること。

	アルゴリズム…やり方、考え方、解法

	フローチャート図…処理の流れを図示したもの。

	単体テスト…合体前の部品後を動作確認するテスト

	結合テスト…合体後の動作を確認するテスト

	総合テスト…システムの卒業テスト。最終テスト。

	テスト仕様書　テスト内容をまとめたもの。①テストを実施した環境②テスト内容③テスト実施のための操作手順④テスト実行結果⑤テスト識別のための番号⑥実施年月日⑦担当者⑧障害報告票番号

	バリデーション　ファイルを読み込んだ時の入力チェック、書式チェック、妥当性の確認

	FW　プログラムの型、枠組み。汎用的な機能が用意されている。

	プラットフォーム　システムを動かすための土台となる環境

	カバレッジ　カバーしている範囲。影響範囲。テストカバレッジはテストが終了した範囲。

	エビデンス　テスト結果の証拠。

	データベース接続クライアント　データベースに接続してSQLを実行し、結果をファイルに出力するツール。DBeaver,HeidiSQL,MySQL等

	Gitホスティングサービス　サーバー貸出サービス。Github,BitBucket,Assembla,GitLab等がある。

	チケット管理ツール　タスク管理ツール

	DBのJOIN　複数のデータを合体させること。テーブルを合体させること。

	SEO　検索エンジン最適化。中身を充実させることによってホームページが検索時に上部に出てくるようにすること。

	オブジェクト指向　属性と操作を持ったものに着目し
